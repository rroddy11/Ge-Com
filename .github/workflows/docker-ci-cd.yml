name: Docker CI/CD

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests
        run: npm run test:coverage

      - name: Build
        run: npm run build -- --configuration production

  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/gecom-angular:latest
            ${{ secrets.DOCKER_USERNAME }}/gecom-angular:${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vercel
        run: |
          # Nettoyage complet
          echo "🧹 Nettoyage de l'ancienne configuration..."
          rm -rf .vercel vercel.json .now

          # Création configuration propre
          echo "📝 Création vercel.json..."
          cat > vercel.json << 'EOF'
          {
            "version": 2,
            "name": "gecom-app",
            "builds": [
              {
                "src": "package.json",
                "use": "@vercel/static-build",
                "config": {
                  "distDir": "dist/gestion-commercial/browser"
                }
              }
            ],
            "routes": [
              {
                "src": "/(.*)",
                "dest": "/$1"
              }
            ]
          }
          EOF

          # Déploiement forcé
          echo "🚀 Déploiement en cours..."
          npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes --force
